# Generated by Django 5.2.4 on 2025-08-04 03:28

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('evaluacion_diagnostico', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enunciado_pregunta', models.TextField(verbose_name='Enunciado de la Pregunta')),
                ('orden_pregunta', models.PositiveIntegerField(unique=True, verbose_name='Orden de la Pregunta')),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Pregunta de la autoevaluacion MIDAS',
                'verbose_name_plural': 'Preguntas de la autoevaluacion MIDAS',
                'db_table': 'evaluacion_pregunta',
                'ordering': ['orden_pregunta'],
            },
        ),
        migrations.AlterField(
            model_name='episodiocefalea',
            name='anticonceptivos',
            field=models.BooleanField(default=False, help_text='¿La paciente usa anticonceptivos hormonales?', verbose_name='Uso de Anticonceptivos'),
        ),
        migrations.AlterField(
            model_name='episodiocefalea',
            name='en_menstruacion',
            field=models.BooleanField(default=False, help_text='¿El episodio ocurrió durante la menstruación?', verbose_name='En menstruación'),
        ),
        migrations.CreateModel(
            name='AutoevaluacionMidas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_autoevaluacion', models.DateField(auto_now_add=True, verbose_name='Fecha de la autoevaluación')),
                ('puntaje_total', models.PositiveIntegerField(default=0, help_text='Puntaje total de la autoevaluación MIDAS', verbose_name='Puntaje Total')),
                ('grado_discapacidad', models.CharField(blank=True, choices=[('I', 'Grado I - Discapacidad mínima'), ('II', 'Grado II - Discapacidad leve'), ('III', 'Grado III - Discapacidad moderada'), ('IV', 'Grado IV - Discapacidad severa')], max_length=5, verbose_name='Grado de Discapacidad')),
                ('paciente', models.ForeignKey(limit_choices_to={'tipo_usuario': 'paciente'}, on_delete=django.db.models.deletion.CASCADE, related_name='autoevaluaciones_midas', to=settings.AUTH_USER_MODEL, verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Evaluación MIDAS',
                'verbose_name_plural': 'Evaluaciones MIDAS',
                'db_table': 'evaluacion_midas',
                'ordering': ['-fecha_autoevaluacion'],
            },
        ),
        migrations.CreateModel(
            name='Respuesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_respuesta', models.PositiveSmallIntegerField(help_text='Número de días, debe estar entre 0 y 90.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(90)], verbose_name='Valor de la Pregunta')),
                ('respondido_en', models.DateTimeField(auto_now=True, verbose_name='Fecha de Respuesta')),
                ('autoevaluacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas_midas_individuales', to='evaluacion_diagnostico.autoevaluacionmidas', verbose_name='Evaluación MIDAS')),
                ('pregunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuesta_a_pregunta', to='evaluacion_diagnostico.pregunta', verbose_name='Pregunta')),
            ],
            options={
                'verbose_name': 'Respuesta MIDAS',
                'verbose_name_plural': 'Respuestas MIDAS',
                'db_table': 'evaluacion_respuesta',
            },
        ),
        migrations.AddIndex(
            model_name='autoevaluacionmidas',
            index=models.Index(fields=['paciente', 'fecha_autoevaluacion'], name='evaluacion__pacient_b59c54_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='autoevaluacionmidas',
            unique_together={('paciente', 'fecha_autoevaluacion')},
        ),
        migrations.AlterUniqueTogether(
            name='respuesta',
            unique_together={('autoevaluacion', 'pregunta')},
        ),
    ]
