# Generated by Django 5.2.4 on 2025-07-23 17:16

import datetime
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('cedula', models.CharField(default='0000000000', max_length=10, unique=True, verbose_name='Cédula/DNI')),
                ('tipo_usuario', models.CharField(choices=[('medico', 'Médico'), ('paciente', 'Paciente'), ('enfermera', 'Enfermera')], default='medico', max_length=10, verbose_name='Tipo de Usuario')),
                ('telefono', models.CharField(default='0000000000', max_length=10, verbose_name='Teléfono')),
                ('fecha_nacimiento', models.DateField(default=datetime.date(1990, 1, 1), verbose_name='Fecha de Nacimiento')),
                ('direccion', models.TextField(default='Sin dirección', verbose_name='Dirección Completa')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro'), ('N', 'Prefiero no decir')], default='N', max_length=1, verbose_name='Género')),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'usuarios_usuario',
            },
        ),
        migrations.CreateModel(
            name='EnfermeraProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_registro', models.CharField(max_length=50, unique=True, verbose_name='Número de Registro Profesional')),
                ('departamento', models.CharField(blank=True, max_length=100, verbose_name='Departamento')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_enfermera', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil Enfermera',
                'verbose_name_plural': 'Perfiles Enfermeras',
                'db_table': 'usuarios_enfermera_profile',
            },
        ),
        migrations.CreateModel(
            name='MedicoProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_licencia', models.CharField(max_length=50, unique=True, verbose_name='Número de Licencia Médica')),
                ('especializacion', models.CharField(choices=[('neurologia', 'Neurología'), ('medicina_general', 'Medicina General'), ('medicina_interna', 'Medicina Interna'), ('psiquiatria', 'Psiquiatría'), ('neurocirugia', 'Neurocirugía'), ('otra', 'Otra')], max_length=100, verbose_name='Especialización')),
                ('anos_experiencia', models.IntegerField(verbose_name='Años de Experiencia')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_medico', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil Médico',
                'verbose_name_plural': 'Perfiles Médicos',
                'db_table': 'usuarios_medico_profile',
            },
        ),
        migrations.CreateModel(
            name='PacienteProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_seguro', models.CharField(blank=True, max_length=50, verbose_name='Número de Seguro Médico')),
                ('contacto_emergencia_nombre', models.CharField(max_length=100, verbose_name='Nombre Contacto de Emergencia')),
                ('contacto_emergencia_telefono', models.CharField(max_length=15, verbose_name='Teléfono Contacto de Emergencia')),
                ('contacto_emergencia_relacion', models.CharField(max_length=50, verbose_name='Relación Contacto de Emergencia')),
                ('alergias', models.TextField(blank=True, verbose_name='Alergias Conocidas')),
                ('grupo_sanguineo', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5, verbose_name='Grupo Sanguíneo')),
                ('medicamentos_actuales', models.TextField(blank=True, verbose_name='Medicamentos Actuales')),
                ('enfermedades_cronicas', models.TextField(blank=True, verbose_name='Enfermedades Crónicas')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_paciente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil Paciente',
                'verbose_name_plural': 'Perfiles Pacientes',
                'db_table': 'usuarios_paciente_profile',
            },
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['cedula'], name='usuarios_us_cedula_0e6bb8_idx'),
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['email'], name='usuarios_us_email_41a027_idx'),
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['tipo_usuario'], name='usuarios_us_tipo_us_c19733_idx'),
        ),
    ]
